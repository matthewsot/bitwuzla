on: [push, pull_request]
name: CI

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        name: [
          production,
          production-clang,
          debug,
          debug-clang
        ]

        exclude:
          - name: production-clang
            os: macos-latest

          - name: debug-clang
            os: macos-latest

        include:
          - name: production
            config: -Dtesting=enabled -Dunit-testing=disabled

          - name: production-clang
            config: -Dtesting=enabled -Dunit-testing=disabled
            env: CC=clang CXX=clang++

          - name: debug
            config: --buildtype=debug

          - name: debug-clang
            config: --buildtype=debug
            env: CC=clang CXX=clang++

    name: ${{ matrix.os }}:${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgmp-dev ninja-build
          python3 -m pip install meson pytest
          echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Install Packages (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gmp pkgconfig ninja
          python3 -m pip install meson pytest
          echo "$(python3 -m site --user-base)/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.BZLA_LIBS_KEY }}
          submodules: 'recursive'

      - name: Restore Subprojects
        id: subprojects-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            subprojects
            build/subprojects
          key: ${{ runner.os }}-${{ matrix.name }}-${{ hashFiles('subprojects/*.wrap', 'subprojects/packagefiles/**') }}-${{ hashFiles('.github/workflows/ci.yml') }}

      - name: Wrap
        if: steps.subprojects-restore.outputs.cache-hit != 'true'
        run: meson wrap install gtest

      - name: Configure
        run: ${{ matrix.env }} meson setup build/ ${{ matrix.config }}

      - name: Build
        run: ninja
        working-directory: build

      - name: Save Subprojects
        id: subprojects-save
        uses: actions/cache/save@v3
        with:
          path: |
            subprojects
            build/subprojects
          key: ${{ steps.subprojects-restore.outputs.cache-primary-key }}

      - name: Test
        run: meson test --print-errorlogs
        working-directory: build
